# This is a Lispy numeric equation evaluator, as a experiment for the later full fledged Lisp/VM76 system

# String index
DATI	0x0 $4

[eval]
CALA [next_char]
MVRB	$0 $12
# is digit?
CALA [is_digit]
JIEA [_eval->is_digit_true]
# not a digit, display the char
SLBA	0x1000 $0
INTX	0x2 0x1000
MVRB	$12 $0
[_eval->is_digit_end]
# while not NULL
DATB	0x0 $8
CMPB	$0 $8
JIEA	[end]
JMPA	[eval]

[end]
HALT

# Other functions & data goes beyond HALT

[_eval->is_digit_true]
CALA [ctoi]
MVRB	$0 $8
SLBA	0x1000 $0
INTX	0x4 0x1000
MVRB	$8 $0
JMPA [_eval->is_digit_end]

# function next_char : read next char into $0
[next_char]
DATI	[StrEq] $0
ADDI	$0 $4
LDBR	$0 $0
DATI	0x1 $8
ADDI	$4 $8
RETN

# function ctoi : convert char into int
[ctoi]
DATB	0x30 $8
MINB	$0 $8
RETN

# function is_digit : check if a char is digit, will set REG109 (REG CMP), true for equals
[is_digit]
DATB	0x30 $8
DATB	0x39 $9
CMPB	$8 $0
JIGA	[_is_digit->false]
CMPB	$0 $9
JIGA	[_is_digit->false]
DATB	0x1 $109
RETN
[_is_digit->false]
DATB	0x0 $109
RETN

[StrEq]
*(+ 3 4)

# EOF
