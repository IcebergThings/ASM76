# This is a Lispy numeric equation evaluator, as a experiment for the later full fledged Lisp/VM76 system

DATI    $0 [Input_String]
CALA    [Tokenize]

HALT

# ========================================================
#  FUNCTIONS SECTION
# ========================================================
[Tokenize]
MVRI    $4 $0                   # Copy string address to $4 for string index
[__Tokenize_loop_start]
LDBR    $8 $4                   # Copy char with index $4 to $8 (byte)
DATB    $9 0x0                  # 0x0 -> $9
CMPB    $8 $9                   # Compare the char with NULL
JIEA    [__Tokenize_loop_end]   # stop on NULL
DATB    $9 0x20                 # ' ' -> $9
CMPB    $8 $9                   # Compare the char with SPACE
JIEA    [__Tokenize_loop_next]  # Skip whitespace
SLBA    [FREE_RAM_START] $8     # Copy char into [FREE_RAM_START] for <putc>
INTX    0x2 [FREE_RAM_START]    # 0x1:putc, ADDR=[FREE_RAM_START]
[__Tokenize_loop_next]
DATI    $8 0x1                  # For inc(1)
ADDI    $4 $8                   # inc($4)
JMPA    [__Tokenize_loop_start]
[__Tokenize_loop_end]
RETN

# ========================================================
#  DATA SECTION
# ========================================================
[Input_String]
*( + (* 46  -6 )120)

[FREE_RAM_START]

# EOF
